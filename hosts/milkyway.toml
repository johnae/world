publicKey = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAZaFbtnZfWQEbRSB2jIbznfDkqdFs+lvvpKB2RVsclM"
arch = "aarch64-linux"

profiles = [
  "hardware/raspberrypi4",
  "profiles/default_fs",
  "profiles/hidpi",
  "profiles/server",
  "profiles/state",
  "profiles/uuid_disk_crypt",
  "profiles/zram",
]

users.groups.john.gid = 1337
users.users.john.uid = 1337
users.users.john.hashedPassword = "$6$zl64i8ENMZt2$zOYSeCnhGaD5i8QBGr2LwkIQhNlGlxAg3h5WfC4NEEGZGzv71XboSwMAb1WPl5TuIz1HqDDBykuhdoX3RwEjw/"
users.users.john.openssh.authorizedKeys.keys = [
  "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCyjMuNOFrZBi7CrTyu71X+aRKyzvTmwCEkomhB0dEhENiQ3PTGVVWBi1Ta9E9fqbqTW0HmNL5pjGV+BU8j9mSi6VxLzJVUweuwQuvqgAi0chAJVPe0FSzft9M7mJoEq5DajuSiL7dSjXpqNFDk/WCDUBE9pELw+TXvxyQpFO9KZwiYCCNRQY6dCjrPJxGwG+JzX6l900GFrgOXQ3KYGk8vzep2Qp+iuH1yTgEowUICkb/9CmZhHQXSvq2gAtoOsGTd9DTyLOeVwZFJkTL/QW0AJNRszckGtYdA3ftCUNsTLSP/VqYN9EjxcMHQe4PGjkK7VLb59DQJFyRQqvPXiUyxNloHcu/sDuiKHIk/0qDLHlVn2xc5zkvzSqoQxoXx+P4dDbje1KHLY8E96gLe2Csu0ti+qsM5KEvgYgwWwm2g3IBlaWwgAtC0UWEzIuBPrAgPd5vi+V50ITIaIk6KIV7JPOubLUXaLS5KW77pWyi9PqAGOXj+DgTWoB3QeeZh7CGhPL5fAecYN7Pw734cULZpnw10Bi/jp4Nlq1AJDk8BwLUJbzZ8aexwMf78syjkHJBBrTOAxADUE02nWBQd0w4K5tl/a3UnBYWGyX8TD44046Swl/RY/69PxFvYcVRuF4eARI6OWojs1uhoR9WkO8eGgEsuxxECwNpWxR5gjKcgJQ==",
  "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIJY3QSBIiRKN8/B3nHgCBDpauQBOftphOeuF2TaBHGQSAAAABHNzaDo=",
  "sk-ssh-ed25519@openssh.com AAAAGnNrLXNzaC1lZDI1NTE5QG9wZW5zc2guY29tAAAAIAwJWtQ5ZU9U0szWzJ+/GH2uvXZ15u9lL0RdcHdsXM0VAAAABHNzaDo=",
]

system.autoUpgrade = { enable = true, flake = "github:johnae/world", allowReboot = true, dates = "*:0/15", randomizedDelaySec = "5min" }

networking.firewall.trustedInterfaces = [ "eth0" ] ## trust the internal network

services.innernet.client.insane.enable = true
services.innernet.client.insane.settings.interface = { address = "192.168.104.100/22", privateKeyFile = "/run/secrets/wg-home" }
services.innernet.client.insane.settings.server = { publicKey = "XPWUeQ4N9zYcyWgIvvp+3eHSsBiqnHuuwu2J/1uHHkE=", externalEndpoint = "65.108.2.146:51820", internalEndpoint = "192.168.104.1:51820" }

age.secrets.wg-home.file = "secrets/milkyway/wg-home.age"

## eth0 - internal
## enp1s0u2 - external

networking.useDHCP = false

networking.vlans.wan = { id = 10, interface = "enp1s0u2" }
networking.vlans.lan = { id = 100, interface = "eth0" }
networking.vlans.dev = { id = 200, interface = "eth0" }
networking.vlans.iot = { id = 300, interface = "eth0" }
networking.vlans.guest = { id = 400, interface = "eth0" }

networking.interfaces.enp1s0u2.useDHCP = false
networking.interfaces.wan.useDHCP = true

networking.interfaces.eth0.useDHCP = false
networking.interfaces.eth0.ipv4.addresses = [ { address = "192.168.1.1", prefixLength = 24 } ]

networking.interfaces.lan.useDHCP = false
networking.interfaces.lan.ipv4.addresses = [ { address = "192.168.100.1", prefixLength = 24 } ]

networking.interfaces.dev.useDHCP = false
networking.interfaces.dev.ipv4.addresses = [ { address = "192.168.200.1", prefixLength = 24 } ]

networking.interfaces.iot.useDHCP = false
networking.interfaces.iot.ipv4.addresses = [ { address = "192.168.300.1", prefixLength = 24 } ]

networking.interfaces.guest.useDHCP = false
networking.interfaces.guest.ipv4.addresses = [ { address = "192.168.400.1", prefixLength = 24 } ]

services.dhcpd4.enable = false
services.dhcpd4.interfaces = [ "eth0", "lan", "dev", "iot", "guest" ]
services.dhcpd4.extraConfig = """
option subnet-mask 255.255.255.0;

subnet 192.168.1.0 netmask 255.255.255.0 {
  option broadcast-address 192.168.1.255;
  option domain-name-servers 192.168.1.1;
  option routers 192.168.1.1;
  interface eth0;
  range 192.168.1.10 192.168.1.128;
}

subnet 192.168.100.0 netmask 255.255.255.0 {
  option broadcast-address 192.168.100.255;
  option domain-name-servers 192.168.100.1;
  option routers 192.168.100.1;
  interface lan;
  range 192.168.100.10 192.168.100.128;
}

subnet 192.168.200.0 netmask 255.255.255.0 {
  option broadcast-address 192.168.200.255;
  option domain-name-servers 192.168.200.1;
  option routers 192.168.200.1;
  interface dev;
  range 192.168.200.10 192.168.200.128;
}

subnet 192.168.300.0 netmask 255.255.255.0 {
  option broadcast-address 192.168.300.255;
  option domain-name-servers 192.168.300.1;
  option routers 192.168.300.1;
  interface iot;
  range 192.168.300.10 192.168.300.128;
}

subnet 192.168.400.0 netmask 255.255.255.0 {
  option broadcast-address 192.168.400.255;
  option domain-name-servers 192.168.400.1;
  option routers 192.168.400.1;
  interface guest;
  range 192.168.400.10 192.168.400.128;
}
"""

services.dnsmasq.enable = true
services.dnsmasq.resolveLocalQueries = true
services.dnsmasq.extraConfig = """
domain-needed
bogus-priv
filterwin2k
no-hosts
addn-hosts=${config.environment.etc.hosts.source}
listen-address=::1,127.0.0.1,192.168.1.1,192.168.100.1,192.168.200.1,192.168.300.1,192.168.400.1

interface=eth0
interface=lan
interface=dev
interface=iot
interface=guest

domain=insane.lan

server=1.0.0.1
server=1.1.1.1
server=2606:4700:4700::1111
"""

networking.hosts."65.108.2.146" = [ "unifi" ]

boot.kernel.sysctl."net.ipv4.conf.all.forwarding" = true
boot.kernel.sysctl."net.ipv6.conf.all.forwarding" = true

# don't automatically configure any ipv6 addresses
boot.kernel.sysctl."net.ipv6.conf.all.accept_ra" = 0
boot.kernel.sysctl."net.ipv6.conf.all.autoconf" = 0
boot.kernel.sysctl."net.ipv6.conf.all.use_tempaddr" = 0

# allow ipv6 autoconfiguration and temporary address use on wan
boot.kernel.sysctl."net.ipv6.conf.enp1s0u2.accept_ra" = 2
boot.kernel.sysctl."net.ipv6.conf.enp1s0u2.autoconf" = 1