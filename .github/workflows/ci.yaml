name: Nix Builder

on:
  pull_request: {}
  push:
    branches:
    - main

jobs:
  nix_lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          accept-flake-config = true
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v6
    - run: |
        nix run .#world -- lint

  nix_check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          accept-flake-config = true
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v6
    - run: |
        nix run .#world -- check

  pkgs_x86_64_linux:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.job-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          accept-flake-config = true
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v6
    - id: job-matrix
      run: |
        echo "matrix=$(nix eval .#github-actions-package-matrix-x86-64-linux --json)" >> "$GITHUB_OUTPUT"

  hosts_x86_64_linux:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.job-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          accept-flake-config = true
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v6
    - id: job-matrix
      run: |
        echo "matrix=$(nix eval .#github-actions-host-matrix-x86-64-linux --json)" >> "$GITHUB_OUTPUT"

  pkg_x86_64_linux:
    needs: pkgs_x86_64_linux
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{ fromJson(needs.pkgs_x86_64_linux.outputs.matrix) }}
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          accept-flake-config = true
    - uses: cachix/cachix-action@v15
      if: ${{ matrix.pkg != 'pxebooter' }}
      with:
        name: insane
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    - name: Run the Magic Nix Cache
      uses: DeterminateSystems/magic-nix-cache-action@v6
    - env:
        PKG: ${{ matrix.pkg }}
      run: |
        nix build .#packages.x86_64-linux.$PKG -L

  summarize:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build (matrix)
    needs: [pkg_x86_64_linux, nix_lint, nix_check]
    steps:
      - name: Check linting status
        if: ${{ needs.nix_lint.result != 'success' }}
        run: exit 1
      - name: Check flake check status
        if: ${{ needs.nix_check.result != 'success' }}
        run: exit 1
      - name: Check x86_64-linux package build matrix status
        if: ${{ needs.pkg_x86_64_linux.result != 'success' }}
        run: exit 1
